{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11300\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf2 #General function \
	#SQL has a mandatory format to follow. Wrong format and/or order would causing error when we run it.\
	#General Function Query :\
	select column1, column2, \'85\
	from  table_name\
	where condition (s)\
	group by field_name (s)\
	having condition (s)\
	order by field name (s)\
	limit number\
\
1. Select Function \
	select column1, column2, \'85\'85 from table_name;\
\
2. Select Distinct  (Remove duplicates in one column or to count unique value)\
	select distinct column1 \
	from table_name\
\
3. String Function\
	#String concatenation\
		string || string\
	#String concatenation with one non-string input\
		string || non-string or non-string || string\
	#Number of characters in string\
		char_length(string) or character_length(string)\
	#Convert string to lowercase\
		lower(string)\
	#Location of specified substring\
		position(substring in string)\
	#Extract substring\
		substring(string [from int] [for int])\
	#Convert string to uppercase\
		upper(string)\
\
4. String Function\
	#Average of all non-null input\
		avg(expression)\
	#Number of input rows\
		count (*)\
	#Number of input rows for which the value of expression is not null\
		count (expression)\
	#Maximum value of expression across all non-null input values\
		max (expression)\
	#Minimum value of expression across all non-null input values\
		min (expression)\
	#Sum of expression across all non-null input values\
		sum (expression)\
\
5. Case When Function \
case\
	when condition1 then result1\
	when condition2 then result2\
	when conditionN then resultN\
	else result\
end\
#Goes through conditions and returns a value when the first condition is met. So, once a condition is true, it will stop reading and return the result. If no conditions are true, it returns the value in the ELSE clause.\
\
6. Where Function\
	select column1, column2, \'85\'85 \
	from table_name\
	where condition (s)\
\
#Used to set limitation and/or condition to the query to filter the data based on needs.\
\
7. Group by\
	select column1, column2, \'85\'85 \
	from table_name\
	group by column1, column2, \'85\'85 \
\
#Used to summarize the value and group it by specific criteria. We need to use AGGREGATE function to summarize numbers.\
\
8. Having\
	select column1, column2, \'85\'85 \
	from table_name\
	group by column1, column2, \'85\'85 \
	having condition (s)\
\
#Used to set limitation and/or condition to the query to filter the data based on needs using aggregated columns.\
\
9. Order By\
	select column1, column2, \'85\'85 \
	from table_name\
	order by column1, column2, \'85\'85 \
\
#Used to set limitation and/or condition to the query to filter the data based on needs using aggregated columns.\
\
10. Limit\
	select column1, column2, \'85\'85 \
	from table_name\
	limit number\
\
#Insignificant for small data but would be a total mess if we didn\'92t use it for big data especially if the occasion is only to explore.\
\
}